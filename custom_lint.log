[ReorderMembersFix] 2025-10-18T13:10:36.605735 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli_scripts/lib/src/mysql/mysql_settings.dart:
[ReorderMembersFix] 2025-10-18T13:10:36.605735 ConflictingEditException: {"offset":3695,"length":109,"replacement":"  String message;\n\n  MissingConfigurationException(this.message);\n\n  @override\n  String toString() => message;"} conflicts with {"offset":3695,"length":109,"replacement":"  String message;\n\n  MissingConfigurationException(this.message);\n\n  @override\n  String toString() => message;"}
[ReorderMembersFix] 2025-10-18T13:10:36.605735 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-18T13:10:36.605735 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-18T13:10:36.605735 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-18T13:10:36.605735 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-18T13:10:36.605735 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-18T13:10:36.605735 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-18T13:10:36.605735 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-10-18T13:10:36.605735 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-18T13:10:36.605735 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-18T13:10:36.605735 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-18T13:10:36.605735 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-18T13:10:36.605735 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-18T13:10:36.605735 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-18T13:10:36.605735 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-18T13:10:36.605735 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-18T13:10:36.605735 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-18T13:10:36.605735 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-18T13:10:36.605735 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-18T13:10:36.605735 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-18T13:10:36.605735 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-18T13:10:36.605735 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-18T13:10:36.605735
[ReorderMembersFix] 2025-10-18T13:10:36.606177 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli_scripts/lib/src/mysql/mysql_settings.dart:
[ReorderMembersFix] 2025-10-18T13:10:36.606177 ConflictingEditException: {"offset":546,"length":3086,"replacement":"  final String host;\n\n  final int port;\n\n  final String user;\n\n  final String password;\n\n  final String dbname;\n\n  MySqlSettings(\n      {required this.host,\n      required this.port,\n      required this.user,\n      required this.password,\n      required this.dbname});\n\n  factory MySqlSettings.load(String dbname) {\n    final pathToDbSettings = pathToSettings(dbname);\n    if (!exists(pathToDbSettings)) {\n      throw MissingConfigurationException('''\nNo configuration exists for $dbname at ${truepath(pathToDbSettings)}. \nCheck your database name or run dmysql config $dbname''');\n    }\n    final settings = SettingsYaml.load(pathToSettings: pathToDbSettings);\n    final host = settings['host'] as String? ?? 'localhost';\n    final port = settings['port'] as int? ?? 3306;\n    final user = settings['user'] as String? ?? 'root';\n    final password = settings['password'] as String? ?? '';\n\n    return MySqlSettings(\n        host: host, port: port, user: user, password: password, dbname: dbname);\n  }\n\n  static Future<MySqlSettings> config(String dbname) async {\n    final pathToDbSettings = MySqlSettings.pathToSettings(dbname);\n\n    if (!exists(dirname(pathToDbSettings))) {\n      createDir(dirname(pathToDbSettings), recursive: true);\n    }\n    final settings = SettingsYaml.load(pathToSettings: pathToDbSettings);\n\n    settings['dbname'] = dbname;\n    settings['host'] = ask('host:',\n        defaultValue: settings['host'] as String?,\n        validator: Ask.any([\n          Ask.fqdn,\n          Ask.ipAddress(),\n          Ask.inList(['localhost', '127.0.0.1'])\n        ]));\n\n    settings['port'] = int.parse(ask('port:',\n        defaultValue: (settings['port'] as int? ?? 3306).toString(),\n        validator: Ask.integer));\n\n    settings['user'] = ask('user:',\n        defaultValue: settings['user'] as String?, validator: Ask.required);\n\n    settings['password'] = ask('password:',\n        defaultValue: settings['password'] as String?,\n        validator: Ask.required,\n        hidden: true);\n\n    if (!_checkDbExists(settings)) {\n      if (!confirm(orange(\n          \"The database $dbname doesn't exist. Do you want to continue?\"))) {\n        throw ExitException(1, '');\n      }\n    }\n\n    // ignore: discarded_futures\n    await settings.save();\n    return MySqlSettings.load(dbname);\n  }\n\n  static String pathToSettings(String dbname) => join(pathToDMysql, dbname);\n\n  static bool _checkDbExists(SettingsYaml settings) {\n    final host = settings['host'] as String;\n    final port = settings['port'] as int;\n    final database = settings['dbname'] as String;\n    final user = settings['user'] as String;\n    final password = settings['password'] as String;\n    final result = 'mysqlshow --host=$host --port=$port '\n            '--user=$user --password=\"$password\" $database'\n        .start(nothrow: true, progress: Progress.capture());\n\n    if (result.exitCode != 0) {\n      final text = result.toParagraph();\n\n      if (text.contains('Unknown database')) {\n        return false;\n      } else {\n        throw ExitException(result.exitCode!, text);\n      }\n    }\n\n    return true;\n  }"} conflicts with {"offset":546,"length":3086,"replacement":"  final String host;\n\n  final int port;\n\n  final String user;\n\n  final String password;\n\n  final String dbname;\n\n  MySqlSettings(\n      {required this.host,\n      required this.port,\n      required this.user,\n      required this.password,\n      required this.dbname});\n\n  factory MySqlSettings.load(String dbname) {\n    final pathToDbSettings = pathToSettings(dbname);\n    if (!exists(pathToDbSettings)) {\n      throw MissingConfigurationException('''\nNo configuration exists for $dbname at ${truepath(pathToDbSettings)}. \nCheck your database name or run dmysql config $dbname''');\n    }\n    final settings = SettingsYaml.load(pathToSettings: pathToDbSettings);\n    final host = settings['host'] as String? ?? 'localhost';\n    final port = settings['port'] as int? ?? 3306;\n    final user = settings['user'] as String? ?? 'root';\n    final password = settings['password'] as String? ?? '';\n\n    return MySqlSettings(\n        host: host, port: port, user: user, password: password, dbname: dbname);\n  }\n\n  static Future<MySqlSettings> config(String dbname) async {\n    final pathToDbSettings = MySqlSettings.pathToSettings(dbname);\n\n    if (!exists(dirname(pathToDbSettings))) {\n      createDir(dirname(pathToDbSettings), recursive: true);\n    }\n    final settings = SettingsYaml.load(pathToSettings: pathToDbSettings);\n\n    settings['dbname'] = dbname;\n    settings['host'] = ask('host:',\n        defaultValue: settings['host'] as String?,\n        validator: Ask.any([\n          Ask.fqdn,\n          Ask.ipAddress(),\n          Ask.inList(['localhost', '127.0.0.1'])\n        ]));\n\n    settings['port'] = int.parse(ask('port:',\n        defaultValue: (settings['port'] as int? ?? 3306).toString(),\n        validator: Ask.integer));\n\n    settings['user'] = ask('user:',\n        defaultValue: settings['user'] as String?, validator: Ask.required);\n\n    settings['password'] = ask('password:',\n        defaultValue: settings['password'] as String?,\n        validator: Ask.required,\n        hidden: true);\n\n    if (!_checkDbExists(settings)) {\n      if (!confirm(orange(\n          \"The database $dbname doesn't exist. Do you want to continue?\"))) {\n        throw ExitException(1, '');\n      }\n    }\n\n    // ignore: discarded_futures\n    await settings.save();\n    return MySqlSettings.load(dbname);\n  }\n\n  static String pathToSettings(String dbname) => join(pathToDMysql, dbname);\n\n  static bool _checkDbExists(SettingsYaml settings) {\n    final host = settings['host'] as String;\n    final port = settings['port'] as int;\n    final database = settings['dbname'] as String;\n    final user = settings['user'] as String;\n    final password = settings['password'] as String;\n    final result = 'mysqlshow --host=$host --port=$port '\n            '--user=$user --password=\"$password\" $database'\n        .start(nothrow: true, progress: Progress.capture());\n\n    if (result.exitCode != 0) {\n      final text = result.toParagraph();\n\n      if (text.contains('Unknown database')) {\n        return false;\n      } else {\n        throw ExitException(result.exitCode!, text);\n      }\n    }\n\n    return true;\n  }"}
[ReorderMembersFix] 2025-10-18T13:10:36.606177 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-18T13:10:36.606177 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-18T13:10:36.606177 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-18T13:10:36.606177 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-18T13:10:36.606177 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-18T13:10:36.606177 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-18T13:10:36.606177 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-10-18T13:10:36.606177 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-18T13:10:36.606177 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-18T13:10:36.606177 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-18T13:10:36.606177 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-18T13:10:36.606177 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-18T13:10:36.606177 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-18T13:10:36.606177 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-18T13:10:36.606177 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-18T13:10:36.606177 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-18T13:10:36.606177 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-18T13:10:36.606177 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-18T13:10:36.606177 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-18T13:10:36.606177 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-18T13:10:36.606177 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-18T13:10:36.606177
[ReorderMembersFix] 2025-10-18T13:10:36.895984 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli_scripts/lib/src/mysql/mysql_settings.dart:
[ReorderMembersFix] 2025-10-18T13:10:36.895984 ConflictingEditException: {"offset":3695,"length":109,"replacement":"  String message;\n\n  MissingConfigurationException(this.message);\n\n  @override\n  String toString() => message;"} conflicts with {"offset":3695,"length":109,"replacement":"  String message;\n\n  MissingConfigurationException(this.message);\n\n  @override\n  String toString() => message;"}
[ReorderMembersFix] 2025-10-18T13:10:36.895984 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-18T13:10:36.895984 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-18T13:10:36.895984 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-18T13:10:36.895984 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-18T13:10:36.895984 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-18T13:10:36.895984 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-18T13:10:36.895984 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-10-18T13:10:36.895984 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-18T13:10:36.895984 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-18T13:10:36.895984 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-18T13:10:36.895984 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-18T13:10:36.895984 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-18T13:10:36.895984 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-18T13:10:36.895984 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-18T13:10:36.895984 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-18T13:10:36.895984 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-18T13:10:36.895984 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-18T13:10:36.895984 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-18T13:10:36.895984 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-18T13:10:36.895984 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-18T13:10:36.895984 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-18T13:10:36.895984
[ReorderMembersFix] 2025-10-18T13:10:36.896620 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli_scripts/lib/src/mysql/mysql_settings.dart:
[ReorderMembersFix] 2025-10-18T13:10:36.896620 ConflictingEditException: {"offset":546,"length":3086,"replacement":"  final String host;\n\n  final int port;\n\n  final String user;\n\n  final String password;\n\n  final String dbname;\n\n  MySqlSettings(\n      {required this.host,\n      required this.port,\n      required this.user,\n      required this.password,\n      required this.dbname});\n\n  factory MySqlSettings.load(String dbname) {\n    final pathToDbSettings = pathToSettings(dbname);\n    if (!exists(pathToDbSettings)) {\n      throw MissingConfigurationException('''\nNo configuration exists for $dbname at ${truepath(pathToDbSettings)}. \nCheck your database name or run dmysql config $dbname''');\n    }\n    final settings = SettingsYaml.load(pathToSettings: pathToDbSettings);\n    final host = settings['host'] as String? ?? 'localhost';\n    final port = settings['port'] as int? ?? 3306;\n    final user = settings['user'] as String? ?? 'root';\n    final password = settings['password'] as String? ?? '';\n\n    return MySqlSettings(\n        host: host, port: port, user: user, password: password, dbname: dbname);\n  }\n\n  static Future<MySqlSettings> config(String dbname) async {\n    final pathToDbSettings = MySqlSettings.pathToSettings(dbname);\n\n    if (!exists(dirname(pathToDbSettings))) {\n      createDir(dirname(pathToDbSettings), recursive: true);\n    }\n    final settings = SettingsYaml.load(pathToSettings: pathToDbSettings);\n\n    settings['dbname'] = dbname;\n    settings['host'] = ask('host:',\n        defaultValue: settings['host'] as String?,\n        validator: Ask.any([\n          Ask.fqdn,\n          Ask.ipAddress(),\n          Ask.inList(['localhost', '127.0.0.1'])\n        ]));\n\n    settings['port'] = int.parse(ask('port:',\n        defaultValue: (settings['port'] as int? ?? 3306).toString(),\n        validator: Ask.integer));\n\n    settings['user'] = ask('user:',\n        defaultValue: settings['user'] as String?, validator: Ask.required);\n\n    settings['password'] = ask('password:',\n        defaultValue: settings['password'] as String?,\n        validator: Ask.required,\n        hidden: true);\n\n    if (!_checkDbExists(settings)) {\n      if (!confirm(orange(\n          \"The database $dbname doesn't exist. Do you want to continue?\"))) {\n        throw ExitException(1, '');\n      }\n    }\n\n    // ignore: discarded_futures\n    await settings.save();\n    return MySqlSettings.load(dbname);\n  }\n\n  static String pathToSettings(String dbname) => join(pathToDMysql, dbname);\n\n  static bool _checkDbExists(SettingsYaml settings) {\n    final host = settings['host'] as String;\n    final port = settings['port'] as int;\n    final database = settings['dbname'] as String;\n    final user = settings['user'] as String;\n    final password = settings['password'] as String;\n    final result = 'mysqlshow --host=$host --port=$port '\n            '--user=$user --password=\"$password\" $database'\n        .start(nothrow: true, progress: Progress.capture());\n\n    if (result.exitCode != 0) {\n      final text = result.toParagraph();\n\n      if (text.contains('Unknown database')) {\n        return false;\n      } else {\n        throw ExitException(result.exitCode!, text);\n      }\n    }\n\n    return true;\n  }"} conflicts with {"offset":546,"length":3086,"replacement":"  final String host;\n\n  final int port;\n\n  final String user;\n\n  final String password;\n\n  final String dbname;\n\n  MySqlSettings(\n      {required this.host,\n      required this.port,\n      required this.user,\n      required this.password,\n      required this.dbname});\n\n  factory MySqlSettings.load(String dbname) {\n    final pathToDbSettings = pathToSettings(dbname);\n    if (!exists(pathToDbSettings)) {\n      throw MissingConfigurationException('''\nNo configuration exists for $dbname at ${truepath(pathToDbSettings)}. \nCheck your database name or run dmysql config $dbname''');\n    }\n    final settings = SettingsYaml.load(pathToSettings: pathToDbSettings);\n    final host = settings['host'] as String? ?? 'localhost';\n    final port = settings['port'] as int? ?? 3306;\n    final user = settings['user'] as String? ?? 'root';\n    final password = settings['password'] as String? ?? '';\n\n    return MySqlSettings(\n        host: host, port: port, user: user, password: password, dbname: dbname);\n  }\n\n  static Future<MySqlSettings> config(String dbname) async {\n    final pathToDbSettings = MySqlSettings.pathToSettings(dbname);\n\n    if (!exists(dirname(pathToDbSettings))) {\n      createDir(dirname(pathToDbSettings), recursive: true);\n    }\n    final settings = SettingsYaml.load(pathToSettings: pathToDbSettings);\n\n    settings['dbname'] = dbname;\n    settings['host'] = ask('host:',\n        defaultValue: settings['host'] as String?,\n        validator: Ask.any([\n          Ask.fqdn,\n          Ask.ipAddress(),\n          Ask.inList(['localhost', '127.0.0.1'])\n        ]));\n\n    settings['port'] = int.parse(ask('port:',\n        defaultValue: (settings['port'] as int? ?? 3306).toString(),\n        validator: Ask.integer));\n\n    settings['user'] = ask('user:',\n        defaultValue: settings['user'] as String?, validator: Ask.required);\n\n    settings['password'] = ask('password:',\n        defaultValue: settings['password'] as String?,\n        validator: Ask.required,\n        hidden: true);\n\n    if (!_checkDbExists(settings)) {\n      if (!confirm(orange(\n          \"The database $dbname doesn't exist. Do you want to continue?\"))) {\n        throw ExitException(1, '');\n      }\n    }\n\n    // ignore: discarded_futures\n    await settings.save();\n    return MySqlSettings.load(dbname);\n  }\n\n  static String pathToSettings(String dbname) => join(pathToDMysql, dbname);\n\n  static bool _checkDbExists(SettingsYaml settings) {\n    final host = settings['host'] as String;\n    final port = settings['port'] as int;\n    final database = settings['dbname'] as String;\n    final user = settings['user'] as String;\n    final password = settings['password'] as String;\n    final result = 'mysqlshow --host=$host --port=$port '\n            '--user=$user --password=\"$password\" $database'\n        .start(nothrow: true, progress: Progress.capture());\n\n    if (result.exitCode != 0) {\n      final text = result.toParagraph();\n\n      if (text.contains('Unknown database')) {\n        return false;\n      } else {\n        throw ExitException(result.exitCode!, text);\n      }\n    }\n\n    return true;\n  }"}
[ReorderMembersFix] 2025-10-18T13:10:36.896620 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-18T13:10:36.896620 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-18T13:10:36.896620 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-18T13:10:36.896620 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-18T13:10:36.896620 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-18T13:10:36.896620 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-18T13:10:36.896620 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-10-18T13:10:36.896620 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-18T13:10:36.896620 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-18T13:10:36.896620 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-18T13:10:36.896620 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-18T13:10:36.896620 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-18T13:10:36.896620 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-18T13:10:36.896620 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-18T13:10:36.896620 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-18T13:10:36.896620 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-18T13:10:36.896620 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-18T13:10:36.896620 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-18T13:10:36.896620 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-18T13:10:36.896620 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-18T13:10:36.896620 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-18T13:10:36.896620
[ReorderMembersFix] 2025-10-18T13:10:37.902331 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli_scripts/lib/src/mysql/mysql_settings.dart:
[ReorderMembersFix] 2025-10-18T13:10:37.902331 ConflictingEditException: {"offset":3695,"length":109,"replacement":"  String message;\n\n  MissingConfigurationException(this.message);\n\n  @override\n  String toString() => message;"} conflicts with {"offset":3695,"length":109,"replacement":"  String message;\n\n  MissingConfigurationException(this.message);\n\n  @override\n  String toString() => message;"}
[ReorderMembersFix] 2025-10-18T13:10:37.902331 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-18T13:10:37.902331 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-18T13:10:37.902331 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-18T13:10:37.902331 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-18T13:10:37.902331 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-18T13:10:37.902331 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-18T13:10:37.902331 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:104:7)
[ReorderMembersFix] 2025-10-18T13:10:37.902331 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-18T13:10:37.902331 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-18T13:10:37.902331 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-18T13:10:37.902331 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-18T13:10:37.902331 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-18T13:10:37.902331 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-18T13:10:37.902331 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-18T13:10:37.902331 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-18T13:10:37.902331 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-18T13:10:37.902331 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-18T13:10:37.902331 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-18T13:10:37.902331 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-18T13:10:37.902331 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-18T13:10:37.902331 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-18T13:10:37.902331
[ReorderMembersFix] 2025-10-18T13:10:37.902850 Plugin ReorderMembersFix threw while analyzing /home/bsutton/git/dcli_scripts/lib/src/mysql/mysql_settings.dart:
[ReorderMembersFix] 2025-10-18T13:10:37.902850 ConflictingEditException: {"offset":546,"length":3086,"replacement":"  final String host;\n\n  final int port;\n\n  final String user;\n\n  final String password;\n\n  final String dbname;\n\n  MySqlSettings(\n      {required this.host,\n      required this.port,\n      required this.user,\n      required this.password,\n      required this.dbname});\n\n  factory MySqlSettings.load(String dbname) {\n    final pathToDbSettings = pathToSettings(dbname);\n    if (!exists(pathToDbSettings)) {\n      throw MissingConfigurationException('''\nNo configuration exists for $dbname at ${truepath(pathToDbSettings)}. \nCheck your database name or run dmysql config $dbname''');\n    }\n    final settings = SettingsYaml.load(pathToSettings: pathToDbSettings);\n    final host = settings['host'] as String? ?? 'localhost';\n    final port = settings['port'] as int? ?? 3306;\n    final user = settings['user'] as String? ?? 'root';\n    final password = settings['password'] as String? ?? '';\n\n    return MySqlSettings(\n        host: host, port: port, user: user, password: password, dbname: dbname);\n  }\n\n  static Future<MySqlSettings> config(String dbname) async {\n    final pathToDbSettings = MySqlSettings.pathToSettings(dbname);\n\n    if (!exists(dirname(pathToDbSettings))) {\n      createDir(dirname(pathToDbSettings), recursive: true);\n    }\n    final settings = SettingsYaml.load(pathToSettings: pathToDbSettings);\n\n    settings['dbname'] = dbname;\n    settings['host'] = ask('host:',\n        defaultValue: settings['host'] as String?,\n        validator: Ask.any([\n          Ask.fqdn,\n          Ask.ipAddress(),\n          Ask.inList(['localhost', '127.0.0.1'])\n        ]));\n\n    settings['port'] = int.parse(ask('port:',\n        defaultValue: (settings['port'] as int? ?? 3306).toString(),\n        validator: Ask.integer));\n\n    settings['user'] = ask('user:',\n        defaultValue: settings['user'] as String?, validator: Ask.required);\n\n    settings['password'] = ask('password:',\n        defaultValue: settings['password'] as String?,\n        validator: Ask.required,\n        hidden: true);\n\n    if (!_checkDbExists(settings)) {\n      if (!confirm(orange(\n          \"The database $dbname doesn't exist. Do you want to continue?\"))) {\n        throw ExitException(1, '');\n      }\n    }\n\n    // ignore: discarded_futures\n    await settings.save();\n    return MySqlSettings.load(dbname);\n  }\n\n  static String pathToSettings(String dbname) => join(pathToDMysql, dbname);\n\n  static bool _checkDbExists(SettingsYaml settings) {\n    final host = settings['host'] as String;\n    final port = settings['port'] as int;\n    final database = settings['dbname'] as String;\n    final user = settings['user'] as String;\n    final password = settings['password'] as String;\n    final result = 'mysqlshow --host=$host --port=$port '\n            '--user=$user --password=\"$password\" $database'\n        .start(nothrow: true, progress: Progress.capture());\n\n    if (result.exitCode != 0) {\n      final text = result.toParagraph();\n\n      if (text.contains('Unknown database')) {\n        return false;\n      } else {\n        throw ExitException(result.exitCode!, text);\n      }\n    }\n\n    return true;\n  }"} conflicts with {"offset":546,"length":3086,"replacement":"  final String host;\n\n  final int port;\n\n  final String user;\n\n  final String password;\n\n  final String dbname;\n\n  MySqlSettings(\n      {required this.host,\n      required this.port,\n      required this.user,\n      required this.password,\n      required this.dbname});\n\n  factory MySqlSettings.load(String dbname) {\n    final pathToDbSettings = pathToSettings(dbname);\n    if (!exists(pathToDbSettings)) {\n      throw MissingConfigurationException('''\nNo configuration exists for $dbname at ${truepath(pathToDbSettings)}. \nCheck your database name or run dmysql config $dbname''');\n    }\n    final settings = SettingsYaml.load(pathToSettings: pathToDbSettings);\n    final host = settings['host'] as String? ?? 'localhost';\n    final port = settings['port'] as int? ?? 3306;\n    final user = settings['user'] as String? ?? 'root';\n    final password = settings['password'] as String? ?? '';\n\n    return MySqlSettings(\n        host: host, port: port, user: user, password: password, dbname: dbname);\n  }\n\n  static Future<MySqlSettings> config(String dbname) async {\n    final pathToDbSettings = MySqlSettings.pathToSettings(dbname);\n\n    if (!exists(dirname(pathToDbSettings))) {\n      createDir(dirname(pathToDbSettings), recursive: true);\n    }\n    final settings = SettingsYaml.load(pathToSettings: pathToDbSettings);\n\n    settings['dbname'] = dbname;\n    settings['host'] = ask('host:',\n        defaultValue: settings['host'] as String?,\n        validator: Ask.any([\n          Ask.fqdn,\n          Ask.ipAddress(),\n          Ask.inList(['localhost', '127.0.0.1'])\n        ]));\n\n    settings['port'] = int.parse(ask('port:',\n        defaultValue: (settings['port'] as int? ?? 3306).toString(),\n        validator: Ask.integer));\n\n    settings['user'] = ask('user:',\n        defaultValue: settings['user'] as String?, validator: Ask.required);\n\n    settings['password'] = ask('password:',\n        defaultValue: settings['password'] as String?,\n        validator: Ask.required,\n        hidden: true);\n\n    if (!_checkDbExists(settings)) {\n      if (!confirm(orange(\n          \"The database $dbname doesn't exist. Do you want to continue?\"))) {\n        throw ExitException(1, '');\n      }\n    }\n\n    // ignore: discarded_futures\n    await settings.save();\n    return MySqlSettings.load(dbname);\n  }\n\n  static String pathToSettings(String dbname) => join(pathToDMysql, dbname);\n\n  static bool _checkDbExists(SettingsYaml settings) {\n    final host = settings['host'] as String;\n    final port = settings['port'] as int;\n    final database = settings['dbname'] as String;\n    final user = settings['user'] as String;\n    final password = settings['password'] as String;\n    final result = 'mysqlshow --host=$host --port=$port '\n            '--user=$user --password=\"$password\" $database'\n        .start(nothrow: true, progress: Progress.capture());\n\n    if (result.exitCode != 0) {\n      final text = result.toParagraph();\n\n      if (text.contains('Unknown database')) {\n        return false;\n      } else {\n        throw ExitException(result.exitCode!, text);\n      }\n    }\n\n    return true;\n  }"}
[ReorderMembersFix] 2025-10-18T13:10:37.902850 #0      addEditForSource (package:analyzer_plugin/src/protocol/protocol_internal.dart:77:7)
[ReorderMembersFix] 2025-10-18T13:10:37.902850 #1      SourceFileEdit.add (package:analyzer_plugin/protocol/protocol_common.dart:3778:7)
[ReorderMembersFix] 2025-10-18T13:10:37.902850 #2      FileEditBuilderImpl._addEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:624:14)
[ReorderMembersFix] 2025-10-18T13:10:37.902850 #3      FileEditBuilderImpl._addEditBuilder (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:639:5)
[ReorderMembersFix] 2025-10-18T13:10:37.902850 #4      FileEditBuilderImpl.addSimpleReplacement (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:581:7)
[ReorderMembersFix] 2025-10-18T13:10:37.902850 #5      ReorderMembersFix.run.<anonymous closure>.applyTo (package:lint_hard/src/reorder_members_fix.dart:97:17)
[ReorderMembersFix] 2025-10-18T13:10:37.902850 #6      ReorderMembersFix.run.<anonymous closure> (package:lint_hard/src/reorder_members_fix.dart:110:11)
[ReorderMembersFix] 2025-10-18T13:10:37.902850 #7      ChangeBuilderImpl.addDartFileEdit (package:analyzer_plugin/src/utilities/change_builder/change_builder_core.dart:170:26)
[ReorderMembersFix] 2025-10-18T13:10:37.902850 #8      ChangeBuilderImpl.addDartFileEdit.<anonymous closure> (package:custom_lint_core/src/change_reporter.dart:242:35)
[ReorderMembersFix] 2025-10-18T13:10:37.902850 #9      new Future.<anonymous closure> (dart:async/future.dart:260:40)
[ReorderMembersFix] 2025-10-18T13:10:37.902850 #10     _rootRun (dart:async/zone.dart:1517:47)
[ReorderMembersFix] 2025-10-18T13:10:37.902850 #11     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-18T13:10:37.902850 #12     _CustomZone.runGuarded (dart:async/zone.dart:1321:7)
[ReorderMembersFix] 2025-10-18T13:10:37.902850 #13     _CustomZone.bindCallbackGuarded.<anonymous closure> (dart:async/zone.dart:1362:23)
[ReorderMembersFix] 2025-10-18T13:10:37.902850 #14     _rootRun (dart:async/zone.dart:1525:13)
[ReorderMembersFix] 2025-10-18T13:10:37.902850 #15     _CustomZone.run (dart:async/zone.dart:1422:19)
[ReorderMembersFix] 2025-10-18T13:10:37.902850 #16     _CustomZone.bindCallback.<anonymous closure> (dart:async/zone.dart:1345:23)
[ReorderMembersFix] 2025-10-18T13:10:37.902850 #17     Timer._createTimer.<anonymous closure> (dart:async-patch/timer_patch.dart:18:15)
[ReorderMembersFix] 2025-10-18T13:10:37.902850 #18     _Timer._runTimers (dart:isolate-patch/timer_impl.dart:423:19)
[ReorderMembersFix] 2025-10-18T13:10:37.902850 #19     _Timer._handleMessage (dart:isolate-patch/timer_impl.dart:454:5)
[ReorderMembersFix] 2025-10-18T13:10:37.902850 #20     _RawReceivePort._handleMessage (dart:isolate-patch/isolate_patch.dart:193:12)
[ReorderMembersFix] 2025-10-18T13:10:37.902850
